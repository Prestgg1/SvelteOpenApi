/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login */
        post: operations["login_token_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login */
        post: operations["login_api_auth_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Me */
        get: operations["me_api_auth_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Logout */
        get: operations["logout_api_auth_logout_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Users */
        get: operations["list_users_api_users_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{user_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get User */
        get: operations["get_user_api_users__user_id__get"];
        /** Update User */
        put: operations["update_user_api_users__user_id__put"];
        post?: never;
        /** Delete User */
        delete: operations["delete_user_api_users__user_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/blogs/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_blogs__get"];
        put?: never;
        /** Create */
        post: operations["create_api_blogs__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/blogs/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_blogs__slug__get"];
        /** Update */
        put: operations["update_api_blogs__slug__put"];
        post?: never;
        /** Delete */
        delete: operations["delete_api_blogs__slug__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/doctor_categories/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_doctor_categories__get"];
        put?: never;
        /** Create */
        post: operations["create_api_doctor_categories__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/doctor_categories/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_doctor_categories__slug__get"];
        /** Update */
        put: operations["update_api_doctor_categories__slug__put"];
        post?: never;
        /** Delete */
        delete: operations["delete_api_doctor_categories__slug__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/customers/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Customers */
        get: operations["get_all_customers_api_customers__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/customers/{customer_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Customer */
        get: operations["get_customer_api_customers__customer_id__get"];
        /** Update Customer */
        put: operations["update_customer_api_customers__customer_id__put"];
        post?: never;
        /** Delete Customer */
        delete: operations["delete_customer_api_customers__customer_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/doctors/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Doctors */
        get: operations["list_doctors_api_doctors__get"];
        put?: never;
        /** Create Doctor */
        post: operations["create_doctor_api_doctors__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/doctors/{doctor_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Doctor */
        get: operations["get_doctor_api_doctors__doctor_id__get"];
        /** Update Doctor */
        put: operations["update_doctor_api_doctors__doctor_id__put"];
        post?: never;
        /** Delete Doctor */
        delete: operations["delete_doctor_api_doctors__doctor_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pharmacies/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Pharmacies */
        get: operations["get_pharmacies_api_pharmacies__get"];
        put?: never;
        /** Create Pharmacy */
        post: operations["create_pharmacy_api_pharmacies__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pharmacies/{pharmacy_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Pharmacy */
        get: operations["get_pharmacy_api_pharmacies__pharmacy_id__get"];
        /** Update Pharmacy */
        put: operations["update_pharmacy_api_pharmacies__pharmacy_id__put"];
        post?: never;
        /** Delete Pharmacy */
        delete: operations["delete_pharmacy_api_pharmacies__pharmacy_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/clinics/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Clinics */
        get: operations["get_clinics_api_clinics__get"];
        put?: never;
        /** Create Clinic */
        post: operations["create_clinic_api_clinics__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/clinics/{clinic_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Clinic */
        get: operations["get_clinic_api_clinics__clinic_id__get"];
        /** Update Clinic */
        put: operations["update_clinic_api_clinics__clinic_id__put"];
        post?: never;
        /** Delete Clinic */
        delete: operations["delete_clinic_api_clinics__clinic_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reviews/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Reviews */
        get: operations["get_reviews_api_reviews__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reviews/{model}/{model_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Reviews For Model */
        get: operations["get_reviews_for_model_api_reviews__model___model_id__get"];
        put?: never;
        /** Create Review */
        post: operations["create_review_api_reviews__model___model_id__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reviews/{review_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Review */
        put: operations["update_review_api_reviews__review_id__put"];
        post?: never;
        /** Delete Review */
        delete: operations["delete_review_api_reviews__review_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/brunches/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Brunches */
        get: operations["list_brunches_api_brunches__get"];
        put?: never;
        /** Create Brunch */
        post: operations["create_brunch_api_brunches__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/brunches/{brunch_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Brunch */
        delete: operations["delete_brunch_api_brunches__brunch_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AuthResponse */
        AuthResponse: {
            user: components["schemas"]["UserBase"];
            /** Token */
            token: string;
        };
        /** BlogCreate */
        BlogCreate: {
            /** Title */
            title: string;
            /** Description */
            description: string;
            /** Text */
            text: string;
            /** Keywords */
            keywords?: string | null;
            /** Image */
            image?: string | null;
            /**
             * Status
             * @default true
             */
            status: boolean | null;
        };
        /** BlogResponse */
        BlogResponse: {
            /** Title */
            title: string;
            /** Description */
            description: string;
            /** Text */
            text: string;
            /** Keywords */
            keywords?: string | null;
            /** Image */
            image?: string | null;
            /**
             * Status
             * @default true
             */
            status: boolean | null;
            /** Id */
            id: number;
            /** Slug */
            slug: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** BlogUpdate */
        BlogUpdate: {
            /** Title */
            title: string;
            /** Description */
            description: string;
            /** Text */
            text: string;
            /** Keywords */
            keywords?: string | null;
            /** Image */
            image?: string | null;
            /**
             * Status
             * @default true
             */
            status: boolean | null;
        };
        /** Body_login_token_post */
        Body_login_token_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /**
             * Password
             * Format: password
             */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /**
             * Client Secret
             * Format: password
             */
            client_secret?: string | null;
        };
        /** BrunchCreate */
        BrunchCreate: {
            /** User Id */
            user_id: number;
            /** Clinic Id */
            clinic_id: number;
            /** Location */
            location: string;
            /** Slug */
            slug?: string | null;
            /** Image */
            image?: string | null;
        };
        /** BrunchOut */
        BrunchOut: {
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /** Clinic Id */
            clinic_id: number;
            /** Location */
            location: string;
            /** Slug */
            slug: string | null;
            /** Image */
            image: string | null;
            /** Average Rating */
            average_rating: number;
        };
        /** ClinicCreate */
        ClinicCreate: {
            /** Id */
            id: number;
            /** Address */
            address: string;
            /** Phone */
            phone: string | null;
            /** City */
            city: string;
            /** State */
            state: string;
            /** Country */
            country: string;
            /**
             * Average Rating
             * @default 0
             */
            average_rating: number | null;
        };
        /** ClinicUpdate */
        ClinicUpdate: {
            /** Address */
            address: string | null;
            /** Phone */
            phone: string | null;
            /** City */
            city: string | null;
            /** State */
            state: string | null;
            /** Country */
            country: string | null;
            /** Average Rating */
            average_rating: number | null;
        };
        /** ClinicsResponse */
        ClinicsResponse: {
            /** Id */
            id: number;
            user: components["schemas"]["UserField"];
            /** Average Rating */
            average_rating: number;
            /** Reviews Count */
            reviews_count: number;
            /** Has Favorited */
            has_favorited: boolean;
        };
        /** CustomerOut */
        CustomerOut: {
            /** Fincode */
            finCode?: string | null;
            /** Phone */
            phone?: string | null;
            /** Gender */
            gender?: string | null;
            /** Birthday */
            birthday?: string | null;
            /** City */
            city?: string | null;
            /** Region */
            region?: string | null;
            /** Street */
            street?: string | null;
            /** Address */
            address?: string | null;
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** CustomerUpdate */
        CustomerUpdate: {
            /** Fincode */
            finCode?: string | null;
            /** Phone */
            phone?: string | null;
            /** Gender */
            gender?: string | null;
            /** Birthday */
            birthday?: string | null;
            /** City */
            city?: string | null;
            /** Region */
            region?: string | null;
            /** Street */
            street?: string | null;
            /** Address */
            address?: string | null;
        };
        /** DoctorCategoryCreate */
        DoctorCategoryCreate: {
            /** Title */
            title: string;
            /** Keywords */
            keywords?: string | null;
            /** Image */
            image?: string | null;
            /**
             * Status
             * @default true
             */
            status: boolean | null;
        };
        /** DoctorCategoryResponse */
        DoctorCategoryResponse: {
            /** Title */
            title: string;
            /** Keywords */
            keywords?: string | null;
            /** Image */
            image?: string | null;
            /**
             * Status
             * @default true
             */
            status: boolean | null;
            /** Id */
            id: number;
            /** Slug */
            slug: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** DoctorCategoryUpdate */
        DoctorCategoryUpdate: {
            /** Title */
            title: string;
            /** Keywords */
            keywords?: string | null;
            /** Image */
            image?: string | null;
            /**
             * Status
             * @default true
             */
            status: boolean | null;
        };
        /** DoctorCreate */
        DoctorCreate: {
            /** User Id */
            user_id: number;
            /** Fincode */
            finCode: string | null;
            /** Phone */
            phone: string | null;
            /** Gender */
            gender: string | null;
            /** Birthday */
            birthday: string | null;
            /**
             * Average Rating
             * @default 0
             */
            average_rating: number | null;
            /** City */
            city: string | null;
            /** State */
            state: string | null;
            /** Country */
            country: string | null;
            /** Address */
            address: string | null;
            /** Doctor Category Id */
            doctor_category_id: number;
        };
        /** DoctorOut */
        DoctorOut: {
            /** Id */
            id: number;
            /** Average Rating */
            average_rating: number | null;
            user: components["schemas"]["UserField"];
            doctor_category: components["schemas"]["Doctor_Category"];
            /** Clinic */
            clinic?: string | null;
            /** Reviews Count */
            reviews_count: number;
            /** Has Favorited */
            has_favorited: boolean;
        };
        /** DoctorUpdate */
        DoctorUpdate: {
            /** Fincode */
            finCode: string | null;
            /** Phone */
            phone: string | null;
            /** Gender */
            gender: string | null;
            /** Birthday */
            birthday: string | null;
            /** Average Rating */
            average_rating: number | null;
            /** City */
            city: string | null;
            /** State */
            state: string | null;
            /** Country */
            country: string | null;
            /** Address */
            address: string | null;
            /** Doctor Category Id */
            doctor_category_id: number | null;
        };
        /** Doctor_Category */
        Doctor_Category: {
            /** Id */
            id: number;
            /** Title */
            title: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** PharmaciesResponse */
        PharmaciesResponse: {
            /** Id */
            id: number;
            user: components["schemas"]["UserField"];
            /** Average Rating */
            average_rating: number;
            /** Slug */
            slug: string | null;
            /** Has Favorited */
            has_favorited: boolean;
            /** Reviews Count */
            reviews_count: number;
        };
        /** PharmacyCreate */
        PharmacyCreate: {
            /**
             * Average Rating
             * @default 0
             */
            average_rating: number | null;
            /** Slug */
            slug: string | null;
            /** Address */
            address: string;
            /** City */
            city: string;
            /** State */
            state: string;
            /** Country */
            country: string;
        };
        /** PharmacyUpdate */
        PharmacyUpdate: {
            /** Average Rating */
            average_rating: number | null;
            /** Slug */
            slug: string | null;
            /** Address */
            address: string | null;
            /** City */
            city: string | null;
            /** State */
            state: string | null;
            /** Country */
            country: string | null;
        };
        /** ReviewCreate */
        ReviewCreate: {
            /** User Id */
            user_id: number;
            /** Rating */
            rating: number;
            /** Review */
            review?: string | null;
        };
        /** ReviewResponse */
        ReviewResponse: {
            /** Id */
            id: number;
            /** Review */
            review: string;
            /** Rating */
            rating: number;
            author: components["schemas"]["UserOut"];
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** ReviewUpdate */
        ReviewUpdate: {
            /** Rating */
            rating: number;
            /** Review */
            review?: string | null;
        };
        /**
         * RoleEnum
         * @enum {string}
         */
        RoleEnum: "admin" | "customer" | "doctor" | "brunch" | "clinic" | "pharmacy";
        /** UpdateUserRequest */
        UpdateUserRequest: {
            /** Name */
            name?: string | null;
            /** Status */
            status?: boolean | null;
            role?: components["schemas"]["UserRole"] | null;
        };
        /** UserBase */
        UserBase: {
            /** Name */
            name?: string | null;
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Image */
            image?: string | null;
            /**
             * Status
             * @default true
             */
            status: boolean | null;
            /** @default customer */
            role: components["schemas"]["RoleEnum"] | null;
        };
        /** UserField */
        UserField: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Image */
            image?: string | null;
        };
        /** UserLogin */
        UserLogin: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
        };
        /** UserOut */
        UserOut: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Image */
            image: string | null;
        };
        /** UserResponse */
        UserResponse: {
            /** Id */
            id: number;
            /** Name */
            name?: string | null;
            /** Email */
            email: string;
            /** Image */
            image?: string | null;
            /** Status */
            status: boolean;
            role: components["schemas"]["UserRole"];
        };
        /**
         * UserRole
         * @enum {string}
         */
        UserRole: "admin" | "customer" | "doctor" | "brunch" | "clinic" | "pharmacy";
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** SuccessResponse */
        main__SuccessResponse: {
            /** Access Token */
            access_token: string;
            /** Token Type */
            token_type: string;
        };
        /** SuccessResponse */
        routers__auth__SuccessResponse: {
            /** Message */
            message: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    login_token_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_login_token_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["main__SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    login_api_auth_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserLogin"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuthResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    me_api_auth_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserBase"] | null;
                };
            };
        };
    };
    logout_api_auth_logout_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["routers__auth__SuccessResponse"];
                };
            };
        };
    };
    list_users_api_users_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"][];
                };
            };
        };
    };
    get_user_api_users__user_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_user_api_users__user_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateUserRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_user_api_users__user_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_blogs__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BlogResponse"][];
                };
            };
        };
    };
    create_api_blogs__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BlogCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BlogResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_blogs__slug__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BlogResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_api_blogs__slug__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BlogUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BlogResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_api_blogs__slug__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BlogResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_doctor_categories__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DoctorCategoryResponse"][];
                };
            };
        };
    };
    create_api_doctor_categories__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DoctorCategoryCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DoctorCategoryResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_doctor_categories__slug__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DoctorCategoryResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_api_doctor_categories__slug__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DoctorCategoryUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DoctorCategoryResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_api_doctor_categories__slug__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DoctorCategoryResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_customers_api_customers__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomerOut"][];
                };
            };
        };
    };
    get_customer_api_customers__customer_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                customer_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomerOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_customer_api_customers__customer_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                customer_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomerUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomerOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_customer_api_customers__customer_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                customer_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomerOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_doctors_api_doctors__get: {
        parameters: {
            query?: {
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DoctorOut"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_doctor_api_doctors__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DoctorCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DoctorOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_doctor_api_doctors__doctor_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                doctor_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DoctorOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_doctor_api_doctors__doctor_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                doctor_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DoctorUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DoctorOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_doctor_api_doctors__doctor_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                doctor_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_pharmacies_api_pharmacies__get: {
        parameters: {
            query?: {
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PharmaciesResponse"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_pharmacy_api_pharmacies__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PharmacyCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_pharmacy_api_pharmacies__pharmacy_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                pharmacy_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_pharmacy_api_pharmacies__pharmacy_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                pharmacy_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PharmacyUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_pharmacy_api_pharmacies__pharmacy_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                pharmacy_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_clinics_api_clinics__get: {
        parameters: {
            query?: {
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ClinicsResponse"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_clinic_api_clinics__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ClinicCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_clinic_api_clinics__clinic_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clinic_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_clinic_api_clinics__clinic_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clinic_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ClinicUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_clinic_api_clinics__clinic_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clinic_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_reviews_api_reviews__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReviewResponse"][];
                };
            };
        };
    };
    get_reviews_for_model_api_reviews__model___model_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                model: string;
                model_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReviewResponse"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_review_api_reviews__model___model_id__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                model: string;
                model_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReviewCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReviewResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_review_api_reviews__review_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                review_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReviewUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReviewResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_review_api_reviews__review_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                review_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_brunches_api_brunches__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BrunchOut"][];
                };
            };
        };
    };
    create_brunch_api_brunches__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BrunchCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BrunchOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_brunch_api_brunches__brunch_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                brunch_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
